{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red0\green116\blue0;
}
{\*\expandedcolortbl;;\csgenericrgb\c0\c0\c0;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c45600\c0;
}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab840
\pard\tx840\pardeftab840\pardirnatural\partightenfactor0

\f0\fs34 \cf2 \cb3  		\
1.	\cf4 // ATTENTION IN UpdateTableViewVCExt.swift, IN updateBarcodes(): IF NAME OF BarcodeData INSTANCE RETURNS nil, BARCODE DICTIONARY IS NOT UPDATED. IT IS DONE TO AVOID CAPTURING BARCODES OF ITEMS THAT DO NOT BELONG TO THE BUSINESS. WHY? BECAUSE, IN THIS VERY CASE, MLKit GIVES PARTIALLY CORRECT BARCODE WITH EITHER WRONG NAME OR PRICE BARCODE DIGITS. SO WHEN THE MISTAKE BELONGS TO NAME DIGITS, THIS CONDITION PREVENTS FROM ERROR, WHEN THE MISTAKE IN THE PRICE DIGITS, IT DOES NOT HELP. THEREFORE WE MIGHT WANT TO COMPARE THE RESULT TO THE VISION API IF IT DETECTS SOMETHING, AND IF PRICE WILL NOT MATCH, WE WILL EITHER TAKE VISION's API RESULT AS IT RETURNS MORE ACCURATE RESULTS, IF IT EVER RETURNS ANYTHING AT ALL. BUT WE ALSO MUST NOTIFY USER THAT THERE IS A PRICE MISMATCH.\
\
2. AS VISION API PREPENDS 0 TO THE AT LEAST EAN8 BARCODES, SETTING UP KEY Of MLBarcodes & VNBarcodes AS Int -- -- solve the problem.\
\
3. \cf2 //\cf4 TODO: DO BarcodeData init WITH ADDITIONAL PARAMETER barcodeType from MLKit\
\
\cf2 4. \cf4 // TODO: CALL DETECTORS ON BACKGROUND THREAD AND LET THE captureOutput() METHOD GO -- PHONE IS MELTING}